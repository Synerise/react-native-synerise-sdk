import { BaseModel } from '../BaseModel';
import { PromotionStatus } from './../Promotions/PromotionStatus';
import { PromotionType } from './../Promotions/PromotionType';
import { IPromotionDetails, PromotionDetails } from './PromotionDetails';
import { PromotionDiscountType } from './../Promotions/PromotionDiscountType';
import { PromotionDiscountMode } from './../Promotions/PromotionDiscountMode';
import { IPromotionDiscountModeDetails, PromotionDiscountModeDetails } from './PromotionDiscountModeDetails';
import { PromotionItemScope } from './../Promotions/PromotionItemScope';
declare const PromotionSortingKey: {
    ExpireAt: string;
    CreatedAt: string;
    LastingAt: string;
    RequireRedeemPoints: string;
    UpdatedAt: string;
    Type: string;
    Priority: string;
};
interface IPromotion {
    uuid: string;
    code: string;
    status: string;
    type: string;
    details?: IPromotionDetails;
    redeemLimitPerClient?: number;
    redeemQuantityPerActivation?: number;
    currentRedeemedQuantity: number;
    currentRedeemLimit: number;
    activationCounter: number;
    possibleRedeems: number;
    discountType: string;
    discountValue: number;
    discountMode: string;
    discountModeDetails?: IPromotionDiscountModeDetails;
    requireRedeemedPoints: number;
    price: number;
    priority: number;
    itemScope: string;
    minBasketValue?: number;
    maxBasketValue?: number;
    name?: string;
    headline?: string;
    descriptionText?: string;
    images?: Array<object>;
    assignedAt?: number;
    startAt?: number;
    expireAt?: number;
    lastingAt: number;
    lastingTime?: number;
    displayFrom?: string;
    displayTo?: string;
    params?: object;
    catalogIndexItems?: Array<string>;
    tags?: Array<object>;
}
declare class Promotion extends BaseModel {
    uuid: string;
    code: string;
    status: PromotionStatus;
    type: PromotionType;
    details?: PromotionDetails;
    redeemLimitPerClient?: number;
    redeemQuantityPerActivation?: number;
    currentRedeemedQuantity: number;
    currentRedeemLimit: number;
    activationCounter: number;
    possibleRedeems: number;
    discountType: PromotionDiscountType;
    discountValue: number;
    discountMode: PromotionDiscountMode;
    discountModeDetails?: PromotionDiscountModeDetails;
    requireRedeemedPoints: number;
    price: number;
    priority: number;
    itemScope: PromotionItemScope;
    minBasketValue?: number;
    maxBasketValue?: number;
    name?: string;
    headline?: string;
    descriptionText?: string;
    images?: Array<object>;
    assignedAt?: Date;
    startAt?: Date;
    expireAt?: Date;
    lastingAt?: Date;
    lastingTime?: number;
    displayFrom?: string;
    displayTo?: string;
    params?: object;
    catalogIndexItems?: Array<string>;
    tags?: Array<object>;
    constructor(modelObject: IPromotion);
}
export { IPromotion, Promotion, PromotionSortingKey };
